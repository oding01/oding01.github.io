

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>코딩하는 감자</title>
  <subtitle>우당탕탕 와르르멘션 개발일지
</subtitle>
  <updated>2025-02-05T15:09:08+09:00</updated>
  <author>
    <name>이어진</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.0">Jekyll</generator>
  <rights> © 2025 이어진 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>[CSS] Calendar가 부모 요소를 벗어나 overflow 되는 현상</title>
    <link href="http://localhost:4000/posts/calendar-width-trouble-shooting/" rel="alternate" type="text/html" title="[CSS] Calendar가 부모 요소를 벗어나 overflow 되는 현상" />
    <published>2025-02-05T14:56:00+09:00</published>
  
    <updated>2025-02-05T14:56:00+09:00</updated>
  
    <id>http://localhost:4000/posts/calendar-width-trouble-shooting/</id>
    <content type="text/html" src="http://localhost:4000/posts/calendar-width-trouble-shooting/" />
    <author>
      <name>potato</name>
    </author>

  
    
    <category term="React" />
    
    <category term="TroubleShooting" />
    
  

  <summary>작은 모바일 화면에서 Calendar가 부모 요소를 벗어나 overflow되어 스크롤이 생겨버리는 상황</summary>

  </entry>

  
  <entry>
    <title>[CSS] header가 잘리는 현상</title>
    <link href="http://localhost:4000/posts/css-trouble-shooting/" rel="alternate" type="text/html" title="[CSS] header가 잘리는 현상" />
    <published>2025-02-04T15:30:00+09:00</published>
  
    <updated>2025-02-04T15:30:00+09:00</updated>
  
    <id>http://localhost:4000/posts/css-trouble-shooting/</id>
    <content type="text/html" src="http://localhost:4000/posts/css-trouble-shooting/" />
    <author>
      <name>potato</name>
    </author>

  
    
    <category term="React" />
    
    <category term="TroubleShooting" />
    
  

  <summary>header가 전체를 차지하지 못하고 잘리는 현상</summary>

  </entry>

  
  <entry>
    <title>[Typescript] main.jsx를 main.tsx로 변경 시 에러</title>
    <link href="http://localhost:4000/posts/main-jsx-error/" rel="alternate" type="text/html" title="[Typescript] main.jsx를 main.tsx로 변경 시 에러" />
    <published>2025-01-20T15:45:00+09:00</published>
  
    <updated>2025-01-21T15:10:19+09:00</updated>
  
    <id>http://localhost:4000/posts/main-jsx-error/</id>
    <content type="text/html" src="http://localhost:4000/posts/main-jsx-error/" />
    <author>
      <name>potato</name>
    </author>

  
    
    <category term="React" />
    
    <category term="TroubleShooting" />
    
  

  <summary>tsx 확장자로 변경 시 에러 트러블 슈팅</summary>

  </entry>

  
  <entry>
    <title>[Trouble Shooting] 리렌더링 방지를 위한 고찰</title>
    <link href="http://localhost:4000/posts/react-rerendering-prevention/" rel="alternate" type="text/html" title="[Trouble Shooting] 리렌더링 방지를 위한 고찰" />
    <published>2025-01-17T10:00:00+09:00</published>
  
    <updated>2025-01-17T10:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/react-rerendering-prevention/</id>
    <content type="text/html" src="http://localhost:4000/posts/react-rerendering-prevention/" />
    <author>
      <name>potato</name>
    </author>

  
    
    <category term="React" />
    
    <category term="TroubleShooting" />
    
  

  <summary>나만의 책장 만들기를 통해 컴포넌트의 리렌더링 방지에 대한 고찰</summary>

  </entry>

  
  <entry>
    <title>[React] React Hooks: useContext로 전역 상태 관리하기</title>
    <link href="http://localhost:4000/posts/how-to-use-usecontext/" rel="alternate" type="text/html" title="[React] React Hooks: useContext로 전역 상태 관리하기" />
    <published>2025-01-14T17:31:00+09:00</published>
  
    <updated>2025-01-15T14:01:09+09:00</updated>
  
    <id>http://localhost:4000/posts/how-to-use-usecontext/</id>
    <content type="text/html" src="http://localhost:4000/posts/how-to-use-usecontext/" />
    <author>
      <name>potato</name>
    </author>

  
    
    <category term="React" />
    
    <category term="hooks" />
    
  

  <summary>useContext란 무엇인가 + 전역 상태 관리</summary>

  </entry>

</feed>


